import React, { useEffect, useState } from 'react';
import { fetchData } from '../api'; // ‚Üê —ç—Ç–æ —Ç–≤–æ—è —É—Ç–∏–ª–∏—Ç–∞ –∏–∑ api.js

function UserInfo() {
  const [data, setData] = useState(null);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    // üëá –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–ª, —á—Ç–æ–±—ã –Ω–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤–∞—Ç—å —Å –∏–º–ø–æ—Ä—Ç–æ–º
    const loadUserData = async () => {
      try {
        // ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—É—é fetchData
        const response = await fetchData('/api/v1/users/me'); // ‚Üê –æ–±—Ä–∞—Ç–∏ –≤–Ω–∏–º–∞–Ω–∏–µ: fetchData –∏–∑ api.js –ù–ï –ø—Ä–∏–Ω–∏–º–∞–µ—Ç options!
        if (!response) throw new Error('–ù–µ—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞');

        // ‚úÖ fetchData –∏–∑ api.js —É–∂–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç JSON, –∞ –Ω–µ Response!
        // –ó–Ω–∞—á–∏—Ç, response ‚Äî —ç—Ç–æ —É–∂–µ –æ–±—ä–µ–∫—Ç (–µ—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª JSON)
        setData(response); // ‚Üê –Ω–µ –Ω—É–∂–Ω–æ –¥–µ–ª–∞—Ç—å .json()!
      } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö:", error);
      } finally {
        setLoading(false);
      }
    };

    loadUserData();
  }, []);

  if (loading) return <p>–ó–∞–≥—Ä—É–∑–∫–∞...</p>;
  if (!data) return <p>–î–∞–Ω–Ω—ã–µ –Ω–µ –ø–æ–ª—É—á–µ–Ω—ã</p>;

  return (
    <div>
      <h2>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ</h2>
      <pre>{JSON.stringify(data, null, 2)}</pre>
    </div>
  );
}

export default UserInfo;